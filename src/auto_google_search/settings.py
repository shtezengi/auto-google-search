"""
Django settings for auto_google_search project.

Generated by 'django-admin startproject' using Django 1.8.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'd$dimnqwb11%qqp1tfbxl59kssb=9sc!lp4d-g!7@!5g3%(0b9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'auto_google_search.apps.website'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'auto_google_search.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "auto_google_search/apps/website/templates"),
        ],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.messages.context_processors.messages',
                'django.core.context_processors.static',
                'django.core.context_processors.request',
                'django.core.context_processors.debug',
                'django.core.context_processors.i18n',
                'django.core.context_processors.media',
                'django.core.context_processors.tz',
            ],
            'loaders': [
                # insert your TEMPLATE_LOADERS here
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
                #'django.template.loaders.eggs.Loader',
            ],
            'debug': DEBUG
        },
    },
]

WSGI_APPLICATION = 'auto_google_search.wsgi.application'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'console':{
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'apps': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'auto_google_search': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.db.backends.schema': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        }
    }
}

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'auto_google_search',
        'USER': 'ags_user',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '3306',
        'TEST': {
            'NAME': 'test_auto_google_search',
            'CHARSET': 'utf8'
        },
        'CONN_MAX_AGE': 600,  # Re-use DB connections
        'OPTIONS': {
            'connect_timeout': 60,
            'init_command': 'SET storage_engine=INNODB'
        }
    },
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'


# Application settings
NUMBER_OF_RESULTS = 20
NUMBER_OF_RESULTS_PER_PAGE_IN_GOOGLE = 10

# Specify the tag name of the element which needs to be extracted, which also could be filtered by a specific attribute
# If attribute_to_extract is None extracts the inner HTML content of the selected tag, otherwise the attribute
# specified in attribute_to_extract will be extracted
DATA_EXTRACTION_CRITERIA_AND_CONTENT_DESTINATIONS = [
    {
        'criteria_name': 'Title',
        'tag': 'title',
        'attribute': None,
        'attribute_value': None,
        'attribute_to_extract': None
    },
    {
        'criteria_name': 'Meta (og:site_name)',
        'tag': 'meta',
        'attribute': 'property',
        'attribute_value': 'og:site_name',
        'attribute_to_extract': 'content'
    },
    {
        'criteria_name': 'Meta Author',
        'tag': 'meta',
        'attribute': 'name',
        'attribute_value': 'author',
        'attribute_to_extract': 'content'
    },
    {
        'criteria_name': 'Meta Description',
        'tag': 'meta',
        'attribute': 'name',
        'attribute_value': 'description',
        'attribute_to_extract': 'content'
    },
    {
        'criteria_name': 'Meta Keywords',
        'tag': 'meta',
        'attribute': 'name',
        'attribute_value': 'keywords',
        'attribute_to_extract': 'content'
    }

]